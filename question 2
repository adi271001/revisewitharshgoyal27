class Solution:
    def combinationSum3(self, k: int, n: int) -> List[List[int]]:
        def dfs(p, c):
                        
            if sum(c)  > n  or len(c)  > k:     
                return
            if sum(c) == n and len(c) == k: 
                r.append(c.copy())
                return
            
            for q in range(p, len(nu)):       
                e = nu[q]                    
                dfs(q + 1, c + [e])          
        r    = []
        nu   = [p   for p in range(1, 10)]   
        dfs(0, [])
        return r
